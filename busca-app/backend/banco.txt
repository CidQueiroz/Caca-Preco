-- Tabela principal de usuários (autenticação)
CREATE TABLE USUARIO (
    ID_Usuario INT PRIMARY KEY AUTO_INCREMENT,
    Email VARCHAR(255) UNIQUE NOT NULL,
    Senha VARCHAR(255) NOT NULL,
    TipoUsuario ENUM('Cliente', 'Vendedor', 'Administrador') NOT NULL,
    UltimoLogin TIMESTAMP NULL,
    DataCadastro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    Ativo BOOLEAN DEFAULT TRUE,
    TokenConfirmacao VARCHAR(255), -- Para confirmação de email
    EmailConfirmado BOOLEAN DEFAULT FALSE -- Indica se o email foi confirmado
);

CREATE TABLE ENDERECO (
    ID_Endereco INT PRIMARY KEY AUTO_INCREMENT,
    Logradouro VARCHAR(255) NOT NULL, -- Rua, Avenida, etc.
    Numero VARCHAR(50),             -- Número do imóvel
    Complemento VARCHAR(255),       -- Apto, Bloco, Sala, etc.
    Bairro VARCHAR(255),
    Cidade VARCHAR(255) NOT NULL,
    Estado VARCHAR(2) NOT NULL,     -- UF (e.g., 'RJ', 'SP')
    CEP VARCHAR(9) NOT NULL,
    Pais VARCHAR(100) DEFAULT 'Brasil', -- Considerar multi-país no futuro
    Latitude DECIMAL(10, 8),        -- Para geolocalização
    Longitude DECIMAL(11, 8),       -- Para geolocalização
    DataCadastro TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE CLIENTE (
    ID_Cliente INT PRIMARY KEY AUTO_INCREMENT,
    ID_Usuario INT UNIQUE NOT NULL,
    Nome VARCHAR(255) NOT NULL,
    Telefone VARCHAR(20),
    -- REMOVER: Endereco VARCHAR(255),
    ID_Endereco INT, -- Adicionar chave estrangeira para ENDERECO
    CPF VARCHAR(14) UNIQUE NOT NULL,
    DataNascimento DATE,
    FOREIGN KEY (ID_Usuario) REFERENCES USUARIO(ID_Usuario) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ID_Endereco) REFERENCES ENDERECO(ID_Endereco) ON DELETE SET NULL ON UPDATE CASCADE -- SET NULL se um endereço puder ser excluído sem excluir o cliente
);

-- Tabela de Vendedores (Lojistas)


-- Tabela de Categorias de Loja
CREATE TABLE CATEGORIA_LOJA (
    ID_CategoriaLoja INT PRIMARY KEY AUTO_INCREMENT,
    NomeCategoria VARCHAR(255) UNIQUE NOT NULL,
    Descricao TEXT
);

-- Tabela de Subcategorias de Produto
CREATE TABLE SUBCATEGORIA_PRODUTO (
    ID_Subcategoria INT PRIMARY KEY AUTO_INCREMENT,
    NomeSubcategoria VARCHAR(255) NOT NULL,
    ID_CategoriaLoja INT NOT NULL,
    FOREIGN KEY (ID_CategoriaLoja) REFERENCES CATEGORIA_LOJA(ID_CategoriaLoja) ON DELETE RESTRICT ON UPDATE CASCADE,
    UNIQUE KEY UK_SubcategoriaPorCategoria (NomeSubcategoria, ID_CategoriaLoja)
);

-- Tabela de Vendedores (Lojistas)
-- Tabela de Vendedores (Lojistas) - Representa a loja física ou online
CREATE TABLE VENDEDOR (
    ID_Vendedor INT PRIMARY KEY AUTO_INCREMENT,
    ID_Usuario INT UNIQUE NOT NULL, -- Chave estrangeira para a tabela USUARIO (para autenticação)
    NomeLoja VARCHAR(255) NOT NULL,
    CNPJ VARCHAR(18) UNIQUE,
    ID_Endereco INT, -- Chave estrangeira para a tabela ENDERECO (endereço da loja)
    Telefone VARCHAR(20),
    Fundacao DATE,
    HorarioFuncionamento VARCHAR(255),
    NomeResponsavel VARCHAR(255),
    CPF_Responsavel VARCHAR(14),
    BreveDescricaoLoja TEXT,
    LogotipoLoja VARCHAR(255),
    WebsiteRedesSociais VARCHAR(255),
    ID_CategoriaLoja INT NOT NULL, -- Categoria principal da loja (ex: Supermercado, Farmácia)
    AvaliacaoLoja DECIMAL(3, 2) CHECK (AvaliacaoLoja BETWEEN 0 AND 5),
    StatusAprovacao ENUM('Pendente', 'Aprovado', 'Rejeitado') DEFAULT 'Pendente', -- Status de aprovação do vendedor
    FOREIGN KEY (ID_Usuario) REFERENCES USUARIO(ID_Usuario) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ID_CategoriaLoja) REFERENCES CATEGORIA_LOJA(ID_CategoriaLoja) ON DELETE RESTRICT ON UPDATE CASCADE,
    FOREIGN KEY (ID_Endereco) REFERENCES ENDERECO(ID_Endereco) ON DELETE SET NULL ON UPDATE CASCADE -- SET NULL se um endereço puder ser excluído sem excluir o vendedor
);

-- Tabela de Categorias de Loja
CREATE TABLE CATEGORIA_LOJA (
    ID_CategoriaLoja INT PRIMARY KEY AUTO_INCREMENT,
    NomeCategoria VARCHAR(255) UNIQUE NOT NULL,
    Descricao TEXT
);

-- Tabela de Subcategorias de Produto
CREATE TABLE SUBCATEGORIA_PRODUTO (
    ID_Subcategoria INT PRIMARY KEY AUTO_INCREMENT,
    NomeSubcategoria VARCHAR(255) NOT NULL,
    ID_CategoriaLoja INT NOT NULL, -- Categoria de loja à qual esta subcategoria pertence (ex: Laticínios para Supermercado)
    FOREIGN KEY (ID_CategoriaLoja) REFERENCES CATEGORIA_LOJA(ID_CategoriaLoja) ON DELETE RESTRICT ON UPDATE CASCADE,
    UNIQUE KEY UK_SubcategoriaPorCategoria (NomeSubcategoria, ID_CategoriaLoja)
);

-- Tabela de Produtos (Informações Gerais do Produto - Catálogo)
CREATE TABLE PRODUTO (
    ID_Produto INT PRIMARY KEY AUTO_INCREMENT,
    NomeProduto VARCHAR(255) NOT NULL,
    Descricao TEXT,
    ID_Subcategoria INT NOT NULL, -- Subcategoria à qual o produto pertence (ex: Leite para Laticínios)
    DataCadastro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_Subcategoria) REFERENCES SUBCATEGORIA_PRODUTO(ID_Subcategoria) ON DELETE RESTRICT ON UPDATE CASCADE
);

-- Tabela de Variações do Produto (Especificidades de um Produto)
CREATE TABLE VARIACAO_PRODUTO (
    ID_Variacao INT PRIMARY KEY AUTO_INCREMENT,
    ID_Produto INT NOT NULL, -- Chave estrangeira para a tabela PRODUTO
    NomeVariacao VARCHAR(255) NOT NULL, -- Ex: Marca, Tipo, Sabor, Cor
    ValorVariacao VARCHAR(255) NOT NULL, -- Ex: Parmalat, Integral, Morango, Azul
    FOREIGN KEY (ID_Produto) REFERENCES PRODUTO(ID_Produto) ON DELETE CASCADE ON UPDATE CASCADE,
    UNIQUE KEY UK_VariacaoProduto (ID_Produto, NomeVariacao, ValorVariacao)
);

-- Tabela de Ofertas de Produtos por Vendedor (Onde o preço e estoque são definidos)
CREATE TABLE OFERTA_PRODUTO (
    ID_Oferta INT PRIMARY KEY AUTO_INCREMENT,
    ID_Vendedor INT NOT NULL, -- Chave estrangeira para a tabela VENDEDOR (quem está vendendo)
    ID_Variacao INT NOT NULL, -- Chave estrangeira para a tabela VARIACAO_PRODUTO (o que está sendo vendido)
    Preco DECIMAL(10, 2) NOT NULL CHECK (Preco > 0),
    QuantidadeDisponivel INT DEFAULT 0 CHECK (QuantidadeDisponivel >= 0),
    DataCadastro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UltimaAtualizacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    Ativo BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (ID_Vendedor) REFERENCES VENDEDOR(ID_Vendedor) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ID_Variacao) REFERENCES VARIACAO_PRODUTO(ID_Variacao) ON DELETE CASCADE ON UPDATE CASCADE,
    UNIQUE KEY UK_OfertaProduto (ID_Vendedor, ID_Variacao)
);

-- Tabela de Imagens da Variação do Produto
CREATE TABLE IMAGEM_VARIACAO (
    ID_Imagem INT PRIMARY KEY AUTO_INCREMENT,
    ID_Variacao INT NOT NULL, -- Chave estrangeira para a tabela VARIACAO_PRODUTO
    URL_Imagem VARCHAR(255) NOT NULL,
    Ordem INT DEFAULT 0,
    FOREIGN KEY (ID_Variacao) REFERENCES VARIACAO_PRODUTO(ID_Variacao) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Tabela de Avaliações de Lojas
CREATE TABLE AVALIACAO_LOJA (
    ID_Avaliacao INT PRIMARY KEY AUTO_INCREMENT,
    ID_Cliente INT NOT NULL, -- Cliente que fez a avaliação
    ID_Vendedor INT NOT NULL, -- Vendedor avaliado
    Nota INT NOT NULL CHECK (Nota BETWEEN 1 AND 5), -- Ex: de 1 a 5 estrelas
    Comentario TEXT,
    DataAvaliacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_Cliente) REFERENCES CLIENTE(ID_Cliente) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ID_Vendedor) REFERENCES VENDEDOR(ID_Vendedor) ON DELETE CASCADE ON UPDATE CASCADE,
    UNIQUE KEY UK_AvaliacaoUnica (ID_Cliente, ID_Vendedor) -- Um cliente só pode avaliar uma loja uma vez
);

-- Tabela de Indicações de Vendedores
CREATE TABLE INDICACAO_VENDEDOR (
    ID_Indicacao INT PRIMARY KEY AUTO_INCREMENT,
    ID_Cliente INT, -- Cliente que fez a indicação (opcional)
    ID_Vendedor INT, -- Vendedor que fez a indicação (opcional)
    NomeIndicado VARCHAR(255) NOT NULL,
    EmailIndicado VARCHAR(255) NOT NULL, -- Torne o email obrigatório
    TelefoneIndicado VARCHAR(20),
    Mensagem TEXT,
    DataIndicacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    StatusIndicacao ENUM('Pendente', 'Contatado', 'Convertido', 'Recusado') DEFAULT 'Pendente',
    FOREIGN KEY (ID_Cliente) REFERENCES CLIENTE(ID_Cliente) ON DELETE SET NULL ON UPDATE CASCADE,
    FOREIGN KEY (ID_Vendedor) REFERENCES VENDEDOR(ID_Vendedor) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE ADMINISTRADOR (
    ID_Admin INT PRIMARY KEY AUTO_INCREMENT,
    ID_Usuario INT UNIQUE NOT NULL,
    Nome VARCHAR(255) NOT NULL,
    Cargo VARCHAR(100),
    Permissoes TEXT, -- JSON ou string com as permissões
    FOREIGN KEY (ID_Usuario) REFERENCES USUARIO(ID_Usuario) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Tabela para monitoramento de preços de produtos externos (para o SaaS)
CREATE TABLE PRODUTOS_MONITORADOS_EXTERNOS (
    ID_Monitoramento INT AUTO_INCREMENT PRIMARY KEY,
    ID_Vendedor INT NOT NULL, -- Vendedor que está monitorando o produto
    URL_Produto VARCHAR(2048) NOT NULL, -- URL do produto no site do concorrente
    Nome_Produto VARCHAR(255),
    Preco_Atual DECIMAL(10, 2),
    Ultima_Coleta DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_Vendedor) REFERENCES VENDEDOR(ID_Vendedor)
);

-- Índices para melhorar desempenho
CREATE INDEX idx_cliente_id ON AVALIACAO_LOJA (ID_Cliente);
CREATE INDEX idx_vendedor_id ON AVALIACAO_LOJA (ID_Vendedor);
CREATE INDEX idx_produto_id ON VARIACAO_PRODUTO (ID_Produto);
CREATE INDEX idx_categoria_id ON SUBCATEGORIA_PRODUTO (ID_CategoriaLoja);
CREATE INDEX idx_subcategoria_id ON PRODUTO (ID_Subcategoria);
CREATE INDEX idx_variacao_id ON OFERTA_PRODUTO (ID_Variacao);
CREATE INDEX idx_vendedor_categoria ON VENDEDOR (ID_CategoriaLoja);
CREATE INDEX idx_indicacao_cliente ON INDICACAO_VENDEDOR (ID_Cliente);
CREATE INDEX idx_indicacao_vendedor ON INDICACAO_VENDEDOR (ID_Vendedor);
CREATE INDEX idx_cliente_usuario ON CLIENTE (ID_Usuario);
CREATE INDEX idx_vendedor_usuario ON VENDEDOR (ID_Usuario);
CREATE INDEX idx_usuario_tipo ON USUARIO (TipoUsuario);
CREATE INDEX idx_usuario_email ON USUARIO (Email);

-- Tabela de Produtos (Informações Gerais)
CREATE TABLE PRODUTO (
    ID_Produto INT PRIMARY KEY AUTO_INCREMENT,
    NomeProduto VARCHAR(255) NOT NULL,
    Descricao TEXT,
    ID_Subcategoria INT NOT NULL,
    DataCadastro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_Subcategoria) REFERENCES SUBCATEGORIA_PRODUTO(ID_Subcategoria) ON DELETE RESTRICT ON UPDATE CASCADE
);

-- Tabela de Variações do Produto (Especificidades)
CREATE TABLE VARIACAO_PRODUTO (
    ID_Variacao INT PRIMARY KEY AUTO_INCREMENT,
    ID_Produto INT NOT NULL,
    NomeVariacao VARCHAR(255) NOT NULL, -- Ex: Marca, Tipo, Sabor, Cor
    ValorVariacao VARCHAR(255) NOT NULL, -- Ex: Parmalat, Integral, Morango, Azul
   FOREIGN KEY (ID_Produto) REFERENCES PRODUTO(ID_Produto) ON DELETE CASCADE ON UPDATE CASCADE,
    UNIQUE KEY UK_VariacaoProduto (ID_Produto, NomeVariacao, ValorVariacao)
);

-- Tabela de Ofertas de Produtos por Vendedor
CREATE TABLE OFERTA_PRODUTO (
    ID_Oferta INT PRIMARY KEY AUTO_INCREMENT,
    ID_Vendedor INT NOT NULL,
    ID_Variacao INT NOT NULL,
Preco DECIMAL(10, 2) NOT NULL CHECK (Preco > 0),
    QuantidadeDisponivel INT DEFAULT 0 CHECK (QuantidadeDisponivel >= 0),
    DataCadastro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UltimaAtualizacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    Ativo BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (ID_Vendedor) REFERENCES VENDEDOR(ID_Vendedor) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ID_Variacao) REFERENCES VARIACAO_PRODUTO(ID_Variacao) ON DELETE CASCADE ON UPDATE CASCADE,
    UNIQUE KEY UK_OfertaProduto (ID_Vendedor, ID_Variacao)
);

-- Tabela de Imagens da Variação do Produto
CREATE TABLE IMAGEM_VARIACAO (
    ID_Imagem INT PRIMARY KEY AUTO_INCREMENT,
    ID_Variacao INT NOT NULL,
    URL_Imagem VARCHAR(255) NOT NULL,
    Ordem INT DEFAULT 0,
    FOREIGN KEY (ID_Variacao) REFERENCES VARIACAO_PRODUTO(ID_Variacao) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Tabela de Avaliações de Lojas
CREATE TABLE AVALIACAO_LOJA (
    ID_Avaliacao INT PRIMARY KEY AUTO_INCREMENT,
    ID_Cliente INT NOT NULL,
    ID_Vendedor INT NOT NULL,
    Nota INT NOT NULL CHECK (Nota BETWEEN 1 AND 5), -- Ex: de 1 a 5 estrelas,
    Comentario TEXT,
    DataAvaliacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_Cliente) REFERENCES CLIENTE(ID_Cliente) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ID_Vendedor) REFERENCES VENDEDOR(ID_Vendedor) ON DELETE CASCADE ON UPDATE CASCADE,
    UNIQUE KEY UK_AvaliacaoUnica (ID_Cliente, ID_Vendedor) -- Um cliente só pode avaliar uma loja uma vez
);

-- Tabela de Indicações de Vendedores
CREATE TABLE INDICACAO_VENDEDOR (
    ID_Indicacao INT PRIMARY KEY AUTO_INCREMENT,
    ID_Cliente INT, -- Cliente que fez a indicação (opcional)
    ID_Vendedor INT, -- Vendedor que fez a indicação (opcional)
    NomeIndicado VARCHAR(255) NOT NULL,
    EmailIndicado VARCHAR(255) NOT NULL, -- Torne o email obrigatório
    TelefoneIndicado VARCHAR(20),
    Mensagem TEXT,
    DataIndicacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    StatusIndicacao ENUM('Pendente', 'Contatado', 'Convertido', 'Recusado') DEFAULT 'Pendente',
    FOREIGN KEY (ID_Cliente) REFERENCES CLIENTE(ID_Cliente) ON DELETE SET NULL ON UPDATE CASCADE,
    FOREIGN KEY (ID_Vendedor) REFERENCES VENDEDOR(ID_Vendedor) ON DELETE SET NULL ON UPDATE CASCADE,
);

CREATE TABLE ADMINISTRADOR (
    ID_Admin INT PRIMARY KEY AUTO_INCREMENT,
    ID_Usuario INT UNIQUE NOT NULL,
    Nome VARCHAR(255) NOT NULL,
    Cargo VARCHAR(100),
    Permissoes TEXT, -- JSON ou string com as permissões
    FOREIGN KEY (ID_Usuario) REFERENCES USUARIO(ID_Usuario) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE PRODUTOS_MONITORADOS_EXTERNOS (
    ID_Monitoramento INT AUTO_INCREMENT PRIMARY KEY,
    ID_Vendedor INT NOT NULL,
    URL_Produto VARCHAR(2048) NOT NULL,
    Nome_Produto VARCHAR(255),
    Preco_Atual DECIMAL(10, 2),
    Ultima_Coleta DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_Vendedor) REFERENCES VENDEDOR(ID_Vendedor)
);

-- Índices para melhorar desempenho
CREATE INDEX idx_cliente_id ON AVALIACAO_LOJA (ID_Cliente);
CREATE INDEX idx_vendedor_id ON AVALIACAO_LOJA (ID_Vendedor);
CREATE INDEX idx_produto_id ON VARIACAO_PRODUTO (ID_Produto);
CREATE INDEX idx_categoria_id ON SUBCATEGORIA_PRODUTO (ID_CategoriaLoja);
CREATE INDEX idx_subcategoria_id ON PRODUTO (ID_Subcategoria);
CREATE INDEX idx_variacao_id ON OFERTA_PRODUTO (ID_Variacao);
CREATE INDEX idx_vendedor_categoria ON VENDEDOR (ID_CategoriaLoja);
CREATE INDEX idx_indicacao_cliente ON INDICACAO_VENDEDOR (ID_Cliente);
CREATE INDEX idx_indicacao_vendedor ON INDICACAO_VENDEDOR (ID_Vendedor);
CREATE INDEX idx_cliente_usuario ON CLIENTE (ID_Usuario);
CREATE INDEX idx_vendedor_usuario ON VENDEDOR (ID_Usuario);
CREATE INDEX idx_usuario_tipo ON USUARIO (TipoUsuario);
CREATE INDEX idx_usuario_email ON USUARIO (Email);