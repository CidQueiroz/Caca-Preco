{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cydyq\\\\Documents\\\\Python\\\\TesteCacaPreco\\\\cacapreco_ai\\\\busca-app\\\\frontend\\\\src\\\\components\\\\RotaProtegida.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RotaProtegida = ({\n  children,\n  papeisPermitidos\n}) => {\n  _s();\n  // Agora o acesso é direto aos dados do objeto usuario\n  const {\n    token,\n    usuario\n  } = useContext(AuthContext);\n  const location = useLocation();\n\n  // Log para depuração\n  console.log('RotaProtegida - Usuario (do contexto):', usuario);\n  console.log('RotaProtegida - Token:', token);\n  console.log('RotaProtegida - Current Path:', location.pathname);\n\n  // Se não há token, redireciona para o login.\n  // É o primeiro e mais importante check.\n  if (!token) {\n    console.log('RotaProtegida - Redirecionando para /login (sem token).');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Se há token, mas o objeto 'usuario' ainda está nulo (carregando),\n  // é um bom lugar para exibir uma tela de carregamento.\n  // Isso evita o loop de redirecionamento.\n  if (!usuario) {\n    console.log('RotaProtegida - Carregando informações do usuário...');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando informa\\xE7\\xF5es do usu\\xE1rio...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n\n  // A partir daqui, sabemos que o token existe e o objeto 'usuario' foi carregado.\n  // Podemos acessar as propriedades com segurança.\n  const perfilCompleto = usuario.perfil_completo;\n  const emailVerificado = usuario.email_verificado;\n  const tipoUsuario = usuario.tipoUsuario;\n\n  // Se o e-mail não for verificado, redireciona.\n  if (!emailVerificado && location.pathname !== '/verificar-email') {\n    console.log('RotaProtegida - Redirecionando para /verificar-email (email não verificado).');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/verificar-email\",\n      replace: true,\n      state: {\n        email: usuario.email\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Se o usuário está autenticado mas o perfil não está completo, redireciona.\n  if (!perfilCompleto && location.pathname !== '/completar-perfil') {\n    console.log('RotaProtegida - Redirecionando para /completar-perfil (perfil não completo).');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/completar-perfil\",\n      replace: true,\n      state: {\n        from: location,\n        idUsuario: usuario.id,\n        tipoUsuario: tipoUsuario,\n        email: usuario.email\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Se 'papeisPermitidos' for fornecido, verifica se o tipo de usuário está na lista\n  if (papeisPermitidos && !papeisPermitidos.map(p => p.toLowerCase()).includes(tipoUsuario === null || tipoUsuario === void 0 ? void 0 : tipoUsuario.toLowerCase())) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/nao-autorizado\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Se tudo estiver ok, renderiza o conteúdo filho\n  return children;\n};\n_s(RotaProtegida, \"MRyVXNve0SrMlVqsyQHy9rxHgl0=\", false, function () {\n  return [useLocation];\n});\n_c = RotaProtegida;\nexport default RotaProtegida;\nvar _c;\n$RefreshReg$(_c, \"RotaProtegida\");","map":{"version":3,"names":["React","useContext","Navigate","useLocation","AuthContext","jsxDEV","_jsxDEV","RotaProtegida","children","papeisPermitidos","_s","token","usuario","location","console","log","pathname","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","perfilCompleto","perfil_completo","emailVerificado","email_verificado","tipoUsuario","state","email","from","idUsuario","id","map","p","toLowerCase","includes","_c","$RefreshReg$"],"sources":["C:/Users/cydyq/Documents/Python/TesteCacaPreco/cacapreco_ai/busca-app/frontend/src/components/RotaProtegida.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\n\nconst RotaProtegida = ({ children, papeisPermitidos }) => {\n    // Agora o acesso é direto aos dados do objeto usuario\n    const { token, usuario } = useContext(AuthContext);\n    const location = useLocation();\n\n    // Log para depuração\n    console.log('RotaProtegida - Usuario (do contexto):', usuario);\n    console.log('RotaProtegida - Token:', token);\n    console.log('RotaProtegida - Current Path:', location.pathname);\n\n    // Se não há token, redireciona para o login.\n    // É o primeiro e mais importante check.\n    if (!token) {\n        console.log('RotaProtegida - Redirecionando para /login (sem token).');\n        return <Navigate to=\"/login\" replace />;\n    }\n\n    // Se há token, mas o objeto 'usuario' ainda está nulo (carregando),\n    // é um bom lugar para exibir uma tela de carregamento.\n    // Isso evita o loop de redirecionamento.\n    if (!usuario) {\n        console.log('RotaProtegida - Carregando informações do usuário...');\n        return <div>Carregando informações do usuário...</div>;\n    }\n\n    // A partir daqui, sabemos que o token existe e o objeto 'usuario' foi carregado.\n    // Podemos acessar as propriedades com segurança.\n    const perfilCompleto = usuario.perfil_completo;\n    const emailVerificado = usuario.email_verificado;\n    const tipoUsuario = usuario.tipoUsuario;\n\n    // Se o e-mail não for verificado, redireciona.\n    if (!emailVerificado && location.pathname !== '/verificar-email') {\n        console.log('RotaProtegida - Redirecionando para /verificar-email (email não verificado).');\n        return <Navigate to=\"/verificar-email\" replace state={{ email: usuario.email }} />;\n    }\n\n    // Se o usuário está autenticado mas o perfil não está completo, redireciona.\n    if (!perfilCompleto && location.pathname !== '/completar-perfil') {\n        console.log('RotaProtegida - Redirecionando para /completar-perfil (perfil não completo).');\n        return <Navigate to=\"/completar-perfil\" replace state={{ from: location, idUsuario: usuario.id, tipoUsuario: tipoUsuario, email: usuario.email }} />;\n    }\n\n    // Se 'papeisPermitidos' for fornecido, verifica se o tipo de usuário está na lista\n    if (papeisPermitidos && !papeisPermitidos.map(p => p.toLowerCase()).includes(tipoUsuario?.toLowerCase())) {\n        return <Navigate to=\"/nao-autorizado\" replace />;\n    }\n\n    // Se tudo estiver ok, renderiza o conteúdo filho\n    return children;\n};\n\nexport default RotaProtegida;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}