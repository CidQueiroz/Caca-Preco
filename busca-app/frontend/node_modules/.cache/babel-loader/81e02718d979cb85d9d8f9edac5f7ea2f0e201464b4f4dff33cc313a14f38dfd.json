{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cydyq\\\\Documents\\\\Python\\\\TesteCacaPreco\\\\cacapreco_ai\\\\busca-app\\\\frontend\\\\src\\\\components\\\\RotaProtegida.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RotaProtegida = ({\n  children,\n  papeisPermitidos\n}) => {\n  _s();\n  const {\n    token,\n    carregando,\n    usuario\n  } = useContext(AuthContext);\n  const location = useLocation();\n\n  // Novo log para depuração do estado de carregamento\n  console.log('RotaProtegida - Carregando:', carregando);\n  console.log('RotaProtegida - Usuario (do contexto):', usuario);\n  console.log('RotaProtegida - Current Path:', location.pathname);\n\n  // 1. Se ainda está carregando, exibe uma tela de espera.\n  // Isso é crucial para evitar redirecionamentos prematuros.\n  if (carregando) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  }\n\n  // 2. Se não há token, redireciona para o login.\n  if (!token) {\n    console.log('RotaProtegida - Redirecionando para /login (sem token).');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n\n  // A partir daqui, sabemos que o token existe e o usuário já foi carregado\n  // (pois 'carregando' é false).\n\n  // As variáveis `perfilCompleto` e `emailVerificado` devem ser obtidas do objeto `usuario`.\n  const perfilCompleto = usuario === null || usuario === void 0 ? void 0 : usuario.perfilCompleto;\n  const emailVerificado = usuario === null || usuario === void 0 ? void 0 : usuario.emailVerificado;\n  const tipoUsuario = usuario === null || usuario === void 0 ? void 0 : usuario.tipoUsuario;\n\n  // 3. Se o e-mail não for verificado, redireciona.\n  if (!emailVerificado && location.pathname !== '/verificar-email') {\n    console.log('RotaProtegida - Redirecionando para /verificar-email (email não verificado).');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/verificar-email\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n\n  // 4. Se o usuário está autenticado mas o perfil não está completo, redireciona.\n  if (!perfilCompleto && location.pathname !== '/completar-perfil') {\n    console.log('RotaProtegida - Redirecionando para /completar-perfil (perfil não completo).');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/completar-perfil\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n\n  // 5. Verifica permissões se necessário\n  if (papeisPermitidos && !papeisPermitidos.includes(tipoUsuario)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/nao-autorizado\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Se tudo estiver ok, renderiza o conteúdo filho\n  return children;\n};\n_s(RotaProtegida, \"LMGmXudjY12HZJaD9NzikPs68iA=\", false, function () {\n  return [useLocation];\n});\n_c = RotaProtegida;\nexport default RotaProtegida;\nvar _c;\n$RefreshReg$(_c, \"RotaProtegida\");","map":{"version":3,"names":["React","useContext","Navigate","useLocation","AuthContext","jsxDEV","_jsxDEV","RotaProtegida","children","papeisPermitidos","_s","token","carregando","usuario","location","console","log","pathname","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","perfilCompleto","emailVerificado","tipoUsuario","includes","_c","$RefreshReg$"],"sources":["C:/Users/cydyq/Documents/Python/TesteCacaPreco/cacapreco_ai/busca-app/frontend/src/components/RotaProtegida.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\n\nconst RotaProtegida = ({ children, papeisPermitidos }) => {\n    const { token, carregando, usuario } = useContext(AuthContext);\n    const location = useLocation();\n\n    // Novo log para depuração do estado de carregamento\n    console.log('RotaProtegida - Carregando:', carregando);\n    console.log('RotaProtegida - Usuario (do contexto):', usuario);\n    console.log('RotaProtegida - Current Path:', location.pathname);\n\n    // 1. Se ainda está carregando, exibe uma tela de espera.\n    // Isso é crucial para evitar redirecionamentos prematuros.\n    if (carregando) {\n        return <div>Carregando...</div>;\n    }\n\n    // 2. Se não há token, redireciona para o login.\n    if (!token) {\n        console.log('RotaProtegida - Redirecionando para /login (sem token).');\n        return <Navigate to=\"/login\" replace />;\n    }\n\n    // A partir daqui, sabemos que o token existe e o usuário já foi carregado\n    // (pois 'carregando' é false).\n    \n    // As variáveis `perfilCompleto` e `emailVerificado` devem ser obtidas do objeto `usuario`.\n    const perfilCompleto = usuario?.perfilCompleto;\n    const emailVerificado = usuario?.emailVerificado;\n    const tipoUsuario = usuario?.tipoUsuario;\n\n    // 3. Se o e-mail não for verificado, redireciona.\n    if (!emailVerificado && location.pathname !== '/verificar-email') {\n        console.log('RotaProtegida - Redirecionando para /verificar-email (email não verificado).');\n        return <Navigate to=\"/verificar-email\" replace />;\n    }\n\n    // 4. Se o usuário está autenticado mas o perfil não está completo, redireciona.\n    if (!perfilCompleto && location.pathname !== '/completar-perfil') {\n        console.log('RotaProtegida - Redirecionando para /completar-perfil (perfil não completo).');\n        return <Navigate to=\"/completar-perfil\" replace />;\n    }\n\n    // 5. Verifica permissões se necessário\n    if (papeisPermitidos && !papeisPermitidos.includes(tipoUsuario)) {\n        return <Navigate to=\"/nao-autorizado\" replace />;\n    }\n\n    // Se tudo estiver ok, renderiza o conteúdo filho\n    return children;\n};\n\nexport default RotaProtegida;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM;IAAEC,KAAK;IAAEC,UAAU;IAAEC;EAAQ,CAAC,GAAGZ,UAAU,CAACG,WAAW,CAAC;EAC9D,MAAMU,QAAQ,GAAGX,WAAW,CAAC,CAAC;;EAE9B;EACAY,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEJ,UAAU,CAAC;EACtDG,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEH,OAAO,CAAC;EAC9DE,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,QAAQ,CAACG,QAAQ,CAAC;;EAE/D;EACA;EACA,IAAIL,UAAU,EAAE;IACZ,oBAAON,OAAA;MAAAE,QAAA,EAAK;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACnC;;EAEA;EACA,IAAI,CAACV,KAAK,EAAE;IACRI,OAAO,CAACC,GAAG,CAAC,yDAAyD,CAAC;IACtE,oBAAOV,OAAA,CAACJ,QAAQ;MAACoB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3C;;EAEA;EACA;;EAEA;EACA,MAAMG,cAAc,GAAGX,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEW,cAAc;EAC9C,MAAMC,eAAe,GAAGZ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEY,eAAe;EAChD,MAAMC,WAAW,GAAGb,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEa,WAAW;;EAExC;EACA,IAAI,CAACD,eAAe,IAAIX,QAAQ,CAACG,QAAQ,KAAK,kBAAkB,EAAE;IAC9DF,OAAO,CAACC,GAAG,CAAC,8EAA8E,CAAC;IAC3F,oBAAOV,OAAA,CAACJ,QAAQ;MAACoB,EAAE,EAAC,kBAAkB;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACrD;;EAEA;EACA,IAAI,CAACG,cAAc,IAAIV,QAAQ,CAACG,QAAQ,KAAK,mBAAmB,EAAE;IAC9DF,OAAO,CAACC,GAAG,CAAC,8EAA8E,CAAC;IAC3F,oBAAOV,OAAA,CAACJ,QAAQ;MAACoB,EAAE,EAAC,mBAAmB;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtD;;EAEA;EACA,IAAIZ,gBAAgB,IAAI,CAACA,gBAAgB,CAACkB,QAAQ,CAACD,WAAW,CAAC,EAAE;IAC7D,oBAAOpB,OAAA,CAACJ,QAAQ;MAACoB,EAAE,EAAC,iBAAiB;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpD;;EAEA;EACA,OAAOb,QAAQ;AACnB,CAAC;AAACE,EAAA,CAhDIH,aAAa;EAAA,QAEEJ,WAAW;AAAA;AAAAyB,EAAA,GAF1BrB,aAAa;AAkDnB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}