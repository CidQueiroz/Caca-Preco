{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cydyq\\\\Documents\\\\Python\\\\TesteCacaPreco\\\\cacapreco_ai\\\\busca-app\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [usuario, setUsuario] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [email, setEmail] = useState(localStorage.getItem('email'));\n  const [perfilCompleto, setPerfilCompleto] = useState(() => {\n    const perfilSalvo = localStorage.getItem('perfilCompleto');\n    return perfilSalvo ? JSON.parse(perfilSalvo) : false;\n  });\n  const [emailVerificado, setEmailVerificado] = useState(() => {\n    const verificadoSalvo = localStorage.getItem('emailVerificado');\n    return verificadoSalvo ? JSON.parse(verificadoSalvo) : false;\n  });\n  useEffect(() => {\n    if (token) {\n      try {\n        const tokenDecodificado = jwtDecode(token);\n        if (tokenDecodificado.exp * 1000 < Date.now()) {\n          logout();\n        } else {\n          setUsuario({\n            id: tokenDecodificado.id,\n            tipoUsuario: tokenDecodificado.tipo_usuario\n          });\n          setEmailVerificado(tokenDecodificado.email_verificado);\n          setPerfilCompleto(tokenDecodificado.perfil_completo);\n        }\n      } catch (error) {\n        console.error(\"Token inválido\", error);\n        logout();\n      }\n    }\n  }, [token]);\n  const login = (novoToken, statusPerfil, userEmail, isEmailVerified) => {\n    localStorage.setItem('token', novoToken);\n    localStorage.setItem('perfilCompleto', JSON.stringify(statusPerfil));\n    localStorage.setItem('email', userEmail);\n    localStorage.setItem('emailVerificado', JSON.stringify(isEmailVerified));\n    setToken(novoToken);\n    setPerfilCompleto(statusPerfil);\n    setEmail(userEmail);\n    setEmailVerificado(isEmailVerified);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('perfilCompleto');\n    localStorage.removeItem('email');\n    localStorage.removeItem('emailVerificado');\n    setToken(null);\n    setUsuario(null);\n    setPerfilCompleto(false);\n    setEmail(null);\n    setEmailVerificado(false);\n  };\n  const atualizarStatusPerfil = status => {\n    localStorage.setItem('perfilCompleto', JSON.stringify(status));\n    setPerfilCompleto(status);\n  };\n  const valorDoContexto = {\n    usuario,\n    token,\n    email,\n    perfilCompleto,\n    emailVerificado,\n    login,\n    logout,\n    atualizarStatusPerfil\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: valorDoContexto,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 12\n  }, this);\n};\n_s(AuthProvider, \"kgQOdMuUYVzf8Sv5Hobxf1Bvivo=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","usuario","setUsuario","token","setToken","localStorage","getItem","email","setEmail","perfilCompleto","setPerfilCompleto","perfilSalvo","JSON","parse","emailVerificado","setEmailVerificado","verificadoSalvo","tokenDecodificado","exp","Date","now","logout","id","tipoUsuario","tipo_usuario","email_verificado","perfil_completo","error","console","login","novoToken","statusPerfil","userEmail","isEmailVerified","setItem","stringify","removeItem","atualizarStatusPerfil","status","valorDoContexto","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/cydyq/Documents/Python/TesteCacaPreco/cacapreco_ai/busca-app/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { jwtDecode } from 'jwt-decode';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [usuario, setUsuario] = useState(null);\n    const [token, setToken] = useState(localStorage.getItem('token'));\n    const [email, setEmail] = useState(localStorage.getItem('email'));\n    const [perfilCompleto, setPerfilCompleto] = useState(() => {\n        const perfilSalvo = localStorage.getItem('perfilCompleto');\n        return perfilSalvo ? JSON.parse(perfilSalvo) : false;\n    });\n    const [emailVerificado, setEmailVerificado] = useState(() => {\n        const verificadoSalvo = localStorage.getItem('emailVerificado');\n        return verificadoSalvo ? JSON.parse(verificadoSalvo) : false;\n    });\n\n    useEffect(() => {\n        if (token) {\n            try {\n                const tokenDecodificado = jwtDecode(token);\n                if (tokenDecodificado.exp * 1000 < Date.now()) {\n                    logout();\n                } else {\n                    setUsuario({ id: tokenDecodificado.id, tipoUsuario: tokenDecodificado.tipo_usuario });\n                    setEmailVerificado(tokenDecodificado.email_verificado);\n                    setPerfilCompleto(tokenDecodificado.perfil_completo);\n                }\n            } catch (error) {\n                console.error(\"Token inválido\", error);\n                logout();\n            }\n        }\n    }, [token]);\n\n    const login = (novoToken, statusPerfil, userEmail, isEmailVerified) => {\n        localStorage.setItem('token', novoToken);\n        localStorage.setItem('perfilCompleto', JSON.stringify(statusPerfil));\n        localStorage.setItem('email', userEmail);\n        localStorage.setItem('emailVerificado', JSON.stringify(isEmailVerified));\n        setToken(novoToken);\n        setPerfilCompleto(statusPerfil);\n        setEmail(userEmail);\n        setEmailVerificado(isEmailVerified);\n    };\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('perfilCompleto');\n        localStorage.removeItem('email');\n        localStorage.removeItem('emailVerificado');\n        setToken(null);\n        setUsuario(null);\n        setPerfilCompleto(false);\n        setEmail(null);\n        setEmailVerificado(false);\n    };\n\n    const atualizarStatusPerfil = (status) => {\n        localStorage.setItem('perfilCompleto', JSON.stringify(status));\n        setPerfilCompleto(status);\n    };\n\n    const valorDoContexto = {\n        usuario,\n        token,\n        email,\n        perfilCompleto,\n        emailVerificado,\n        login,\n        logout,\n        atualizarStatusPerfil,\n    };\n\n    return <AuthContext.Provider value={valorDoContexto}>{children}</AuthContext.Provider>;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}