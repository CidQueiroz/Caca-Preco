{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cydyq\\\\Documents\\\\Python\\\\TesteCacaPreco\\\\cacapreco_ai\\\\busca-app\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  // Inicializa o usuario no estado de forma síncrona\n  const [usuario, setUsuario] = useState(() => {\n    const userSalvo = localStorage.getItem('usuario');\n    try {\n      return userSalvo ? JSON.parse(userSalvo) : null;\n    } catch (e) {\n      console.error(\"Erro ao parsear usuário do localStorage\", e);\n      return null;\n    }\n  });\n  const [carregando, setCarregando] = useState(true);\n  useEffect(() => {\n    const checkToken = () => {\n      if (token) {\n        try {\n          const tokenDecodificado = jwtDecode(token);\n          if (tokenDecodificado.exp * 1000 < Date.now()) {\n            console.log('AuthContext - Token expirado. Realizando logout.');\n            logout();\n          }\n        } catch (error) {\n          console.error(\"AuthContext - Token inválido\", error);\n          logout();\n        }\n      }\n      setCarregando(false); // Termina o carregamento aqui, após a verificação\n    };\n    checkToken();\n  }, [token]);\n  const login = (novoToken, dadosUsuario) => {\n    console.log('AuthContext - Dados do usuário recebidos na função login:', dadosUsuario);\n    localStorage.setItem('token', novoToken);\n    localStorage.setItem('usuario', JSON.stringify(dadosUsuario));\n    setToken(novoToken);\n    setUsuario(dadosUsuario);\n    setCarregando(false); // Garante que o estado de carregamento é false após o login\n    console.log('AuthContext - Estado do usuário após setUsuario:', dadosUsuario);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('usuario');\n    setToken(null);\n    setUsuario(null);\n    setCarregando(false);\n  };\n\n  // A propriedade `perfil_completo` e `email_verificado` do objeto 'usuario'\n  // devem ser usadas diretamente, pois são a fonte da verdade.\n  const perfil_completo = usuario === null || usuario === void 0 ? void 0 : usuario.perfil_completo;\n  const email_Verificado = usuario === null || usuario === void 0 ? void 0 : usuario.email_verificado;\n  const valorDoContexto = {\n    token,\n    usuario,\n    email: usuario === null || usuario === void 0 ? void 0 : usuario.email,\n    perfil_completo,\n    email_Verificado,\n    login,\n    logout,\n    carregando // Adiciona o estado de carregamento ao contexto\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: valorDoContexto,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 12\n  }, this);\n};\n_s(AuthProvider, \"RVX6r0Zf0/6y5PnKbc0mrNT74DU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","localStorage","getItem","usuario","setUsuario","userSalvo","JSON","parse","e","console","error","carregando","setCarregando","checkToken","tokenDecodificado","exp","Date","now","log","logout","login","novoToken","dadosUsuario","setItem","stringify","removeItem","perfil_completo","email_Verificado","email_verificado","valorDoContexto","email","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/cydyq/Documents/Python/TesteCacaPreco/cacapreco_ai/busca-app/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { jwtDecode } from 'jwt-decode';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [token, setToken] = useState(localStorage.getItem('token'));\n    // Inicializa o usuario no estado de forma síncrona\n    const [usuario, setUsuario] = useState(() => {\n        const userSalvo = localStorage.getItem('usuario');\n        try {\n            return userSalvo ? JSON.parse(userSalvo) : null;\n        } catch (e) {\n            console.error(\"Erro ao parsear usuário do localStorage\", e);\n            return null;\n        }\n    });\n    const [carregando, setCarregando] = useState(true);\n\n    useEffect(() => {\n        const checkToken = () => {\n            if (token) {\n                try {\n                    const tokenDecodificado = jwtDecode(token);\n                    if (tokenDecodificado.exp * 1000 < Date.now()) {\n                        console.log('AuthContext - Token expirado. Realizando logout.');\n                        logout();\n                    }\n                } catch (error) {\n                    console.error(\"AuthContext - Token inválido\", error);\n                    logout();\n                }\n            }\n            setCarregando(false); // Termina o carregamento aqui, após a verificação\n        };\n\n        checkToken();\n    }, [token]);\n\n    const login = (novoToken, dadosUsuario) => {\n        console.log('AuthContext - Dados do usuário recebidos na função login:', dadosUsuario);\n        localStorage.setItem('token', novoToken);\n        localStorage.setItem('usuario', JSON.stringify(dadosUsuario));\n        setToken(novoToken);\n        setUsuario(dadosUsuario);\n        setCarregando(false); // Garante que o estado de carregamento é false após o login\n        console.log('AuthContext - Estado do usuário após setUsuario:', dadosUsuario);\n    };\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('usuario');\n        setToken(null);\n        setUsuario(null);\n        setCarregando(false);\n    };\n    \n    // A propriedade `perfil_completo` e `email_verificado` do objeto 'usuario'\n    // devem ser usadas diretamente, pois são a fonte da verdade.\n    const perfil_completo = usuario?.perfil_completo;\n    const email_Verificado = usuario?.email_verificado;\n\n    const valorDoContexto = {\n        token,\n        usuario,\n        email: usuario?.email,\n        perfil_completo,\n        email_Verificado,\n        login,\n        logout,\n        carregando, // Adiciona o estado de carregamento ao contexto\n    };\n\n    return <AuthContext.Provider value={valorDoContexto}>{children}</AuthContext.Provider>;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}