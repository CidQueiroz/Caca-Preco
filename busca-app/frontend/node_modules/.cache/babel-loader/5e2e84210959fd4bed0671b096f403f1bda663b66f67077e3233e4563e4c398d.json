{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cydyq\\\\Documents\\\\Python\\\\TesteCacaPreco\\\\cacapreco_ai\\\\busca-app\\\\frontend\\\\src\\\\components\\\\RotaProtegida.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RotaProtegida = ({\n  children,\n  papeisPermitidos\n}) => {\n  _s();\n  var _usuario$tipoUsuario;\n  const {\n    usuario,\n    token,\n    perfilCompleto,\n    emailVerificado,\n    email\n  } = useContext(AuthContext);\n  const location = useLocation();\n  console.log('RotaProtegida - Usuário:', usuario);\n  console.log('RotaProtegida - Email Verificado (AuthContext):', emailVerificado);\n  console.log('RotaProtegida - Perfil Completo (AuthContext):', perfilCompleto);\n  console.log('RotaProtegida - Current Path:', location.pathname);\n\n  // Se não há token, redireciona para o login\n  if (!token) {\n    console.log('RotaProtegida - Redirecionando para /login (sem token).');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Se há token, mas o usuário ainda não foi carregado (assíncrono), mostra carregando\n  if (token && !usuario) {\n    console.log('RotaProtegida - Carregando informações do usuário...');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando informa\\xE7\\xF5es do usu\\xE1rio...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Se o e-mail não for verificado, redireciona para a página de verificação, a menos que seja a página de perfil completo\n  // ou a própria página de verificação.\n  if (!(usuario !== null && usuario !== void 0 && usuario.email_verificado) && location.pathname !== '/verificar-email' && location.pathname !== '/completar-perfil') {\n    console.log('RotaProtegida - Redirecionando para /verificar-email (email não verificado).');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/verificar-email\",\n      replace: true,\n      state: {\n        email: email\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Se o usuário está autenticado mas o perfil não está completo, redireciona\n  if (usuario && !(usuario !== null && usuario !== void 0 && usuario.perfil_completo) && location.pathname !== '/completar-perfil') {\n    console.log('RotaProtegida - Redirecionando para /completar-perfil (perfil não completo).');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/completar-perfil\",\n      replace: true,\n      state: {\n        from: location,\n        idUsuario: usuario.id,\n        tipoUsuario: usuario.tipoUsuario,\n        email: email\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Se 'papeisPermitidos' for fornecido, verifica se o tipo de usuário está na lista\n  if (papeisPermitidos && !papeisPermitidos.map(p => p.toLowerCase()).includes(usuario === null || usuario === void 0 ? void 0 : (_usuario$tipoUsuario = usuario.tipoUsuario) === null || _usuario$tipoUsuario === void 0 ? void 0 : _usuario$tipoUsuario.toLowerCase())) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/nao-autorizado\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Se tudo estiver ok, renderiza o conteúdo filho\n  return children;\n};\n_s(RotaProtegida, \"W5XXY5Itqtoe34y/zwJw2ZVksdI=\", false, function () {\n  return [useLocation];\n});\n_c = RotaProtegida;\nexport default RotaProtegida;\nvar _c;\n$RefreshReg$(_c, \"RotaProtegida\");","map":{"version":3,"names":["React","useContext","Navigate","useLocation","AuthContext","jsxDEV","_jsxDEV","RotaProtegida","children","papeisPermitidos","_s","_usuario$tipoUsuario","usuario","token","perfilCompleto","emailVerificado","email","location","console","log","pathname","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","email_verificado","state","perfil_completo","from","idUsuario","id","tipoUsuario","map","p","toLowerCase","includes","_c","$RefreshReg$"],"sources":["C:/Users/cydyq/Documents/Python/TesteCacaPreco/cacapreco_ai/busca-app/frontend/src/components/RotaProtegida.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\n\nconst RotaProtegida = ({ children, papeisPermitidos }) => {\n    const { usuario, token, perfilCompleto, emailVerificado, email } = useContext(AuthContext);\n    const location = useLocation();\n\n    console.log('RotaProtegida - Usuário:', usuario);\n    console.log('RotaProtegida - Email Verificado (AuthContext):', emailVerificado);\n    console.log('RotaProtegida - Perfil Completo (AuthContext):', perfilCompleto);\n    console.log('RotaProtegida - Current Path:', location.pathname);\n\n    // Se não há token, redireciona para o login\n    if (!token) {\n        console.log('RotaProtegida - Redirecionando para /login (sem token).');\n        return <Navigate to=\"/login\" replace />;\n    }\n\n    // Se há token, mas o usuário ainda não foi carregado (assíncrono), mostra carregando\n    if (token && !usuario) {\n        console.log('RotaProtegida - Carregando informações do usuário...');\n        return <div>Carregando informações do usuário...</div>;\n    }\n\n    // Se o e-mail não for verificado, redireciona para a página de verificação, a menos que seja a página de perfil completo\n    // ou a própria página de verificação.\n    if (!usuario?.email_verificado && location.pathname !== '/verificar-email' && location.pathname !== '/completar-perfil') {\n        console.log('RotaProtegida - Redirecionando para /verificar-email (email não verificado).');\n        return <Navigate to=\"/verificar-email\" replace state={{ email: email }} />;\n    }\n\n    // Se o usuário está autenticado mas o perfil não está completo, redireciona\n    if (usuario && !usuario?.perfil_completo && location.pathname !== '/completar-perfil') {\n        console.log('RotaProtegida - Redirecionando para /completar-perfil (perfil não completo).');\n        return <Navigate to=\"/completar-perfil\" replace state={{ from: location, idUsuario: usuario.id, tipoUsuario: usuario.tipoUsuario, email: email }} />;\n    }\n\n    // Se 'papeisPermitidos' for fornecido, verifica se o tipo de usuário está na lista\n    if (papeisPermitidos && !papeisPermitidos.map(p => p.toLowerCase()).includes(usuario?.tipoUsuario?.toLowerCase())) {\n        return <Navigate to=\"/nao-autorizado\" replace />;\n    }\n\n    // Se tudo estiver ok, renderiza o conteúdo filho\n    return children;\n};\n\nexport default RotaProtegida;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}