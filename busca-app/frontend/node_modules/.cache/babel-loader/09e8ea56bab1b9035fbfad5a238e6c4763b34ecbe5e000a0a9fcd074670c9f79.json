{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cydyq\\\\Documents\\\\Python\\\\TesteCacaPreco\\\\cacapreco_ai\\\\busca-app\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [usuario, setUsuario] = useState(() => {\n    const userSalvo = localStorage.getItem('usuario');\n    try {\n      return userSalvo ? JSON.parse(userSalvo) : null;\n    } catch (e) {\n      return null;\n    }\n  });\n  useEffect(() => {\n    if (token) {\n      try {\n        const tokenDecodificado = jwtDecode(token);\n        if (tokenDecodificado.exp * 1000 < Date.now()) {\n          logout();\n        }\n      } catch (error) {\n        console.error(\"Token inválido\", error);\n        logout();\n      }\n    }\n  }, [token]);\n  const login = (novoToken, dadosUsuario) => {\n    console.log('AuthContext - Dados do usuário recebidos na função login:', dadosUsuario);\n    localStorage.setItem('token', novoToken);\n    localStorage.setItem('usuario', JSON.stringify(dadosUsuario));\n    setToken(novoToken);\n    setUsuario(dadosUsuario);\n    console.log('AuthContext - Estado do usuário após setUsuario:', dadosUsuario);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('usuario');\n    setToken(null);\n    setUsuario(null);\n  };\n  const atualizarStatusPerfil = status => {\n    if (usuario) {\n      const usuarioAtualizado = {\n        ...usuario,\n        perfil_completo: status\n      };\n      setUsuario(usuarioAtualizado);\n      localStorage.setItem('usuario', JSON.stringify(usuarioAtualizado));\n    }\n  };\n\n  // Fornecer os valores derivados do objeto 'usuario' para manter a compatibilidade\n  // com os componentes que ainda não foram refatorados.\n  const valorDoContexto = {\n    token,\n    usuario,\n    email: usuario === null || usuario === void 0 ? void 0 : usuario.email,\n    perfilCompleto: usuario === null || usuario === void 0 ? void 0 : usuario.perfil_completo,\n    emailVerificado: usuario === null || usuario === void 0 ? void 0 : usuario.email_verificado,\n    login,\n    logout,\n    atualizarStatusPerfil\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: valorDoContexto,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 12\n  }, this);\n};\n_s(AuthProvider, \"iylczOdQg7TAiPVOUgm7/eMJ/3U=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","localStorage","getItem","usuario","setUsuario","userSalvo","JSON","parse","e","tokenDecodificado","exp","Date","now","logout","error","console","login","novoToken","dadosUsuario","log","setItem","stringify","removeItem","atualizarStatusPerfil","status","usuarioAtualizado","perfil_completo","valorDoContexto","email","perfilCompleto","emailVerificado","email_verificado","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/cydyq/Documents/Python/TesteCacaPreco/cacapreco_ai/busca-app/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { jwtDecode } from 'jwt-decode';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [token, setToken] = useState(localStorage.getItem('token'));\n    const [usuario, setUsuario] = useState(() => {\n        const userSalvo = localStorage.getItem('usuario');\n        try {\n            return userSalvo ? JSON.parse(userSalvo) : null;\n        } catch (e) {\n            return null;\n        }\n    });\n\n    useEffect(() => {\n        if (token) {\n            try {\n                const tokenDecodificado = jwtDecode(token);\n                if (tokenDecodificado.exp * 1000 < Date.now()) {\n                    logout();\n                }\n            } catch (error) {\n                console.error(\"Token inválido\", error);\n                logout();\n            }\n        }\n    }, [token]);\n\n    const login = (novoToken, dadosUsuario) => {\n        console.log('AuthContext - Dados do usuário recebidos na função login:', dadosUsuario);\n        localStorage.setItem('token', novoToken);\n        localStorage.setItem('usuario', JSON.stringify(dadosUsuario));\n        setToken(novoToken);\n        setUsuario(dadosUsuario);\n        console.log('AuthContext - Estado do usuário após setUsuario:', dadosUsuario);\n    };\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('usuario');\n        setToken(null);\n        setUsuario(null);\n    };\n\n    const atualizarStatusPerfil = (status) => {\n        if (usuario) {\n            const usuarioAtualizado = { ...usuario, perfil_completo: status };\n            setUsuario(usuarioAtualizado);\n            localStorage.setItem('usuario', JSON.stringify(usuarioAtualizado));\n        }\n    };\n\n    // Fornecer os valores derivados do objeto 'usuario' para manter a compatibilidade\n    // com os componentes que ainda não foram refatorados.\n    const valorDoContexto = {\n        token,\n        usuario,\n        email: usuario?.email,\n        perfilCompleto: usuario?.perfil_completo,\n        emailVerificado: usuario?.email_verificado,\n        login,\n        logout,\n        atualizarStatusPerfil,\n    };\n\n    return <AuthContext.Provider value={valorDoContexto}>{children}</AuthContext.Provider>;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}