{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cydyq\\\\Documents\\\\Python\\\\TesteCacaPreco\\\\cacapreco_ai\\\\busca-app\\\\frontend\\\\src\\\\components\\\\RotaProtegida.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RotaProtegida = ({\n  children,\n  papeisPermitidos\n}) => {\n  _s();\n  var _usuario, _usuario2, _usuario2$tipoUsuario;\n  const {\n    token,\n    perfilCompleto,\n    emailVerificado,\n    email\n  } = useContext(AuthContext);\n  const location = useLocation();\n  console.log('RotaProtegida - Email Verificado (do contexto):', emailVerificado, 'Tipo:', typeof emailVerificado);\n  console.log('RotaProtegida - Perfil Completo (do contexto):', perfilCompleto, 'Tipo:', typeof perfilCompleto);\n  console.log('RotaProtegida - Current Path:', location.pathname);\n\n  // Se não há token, redireciona para o login\n  if (!token) {\n    console.log('RotaProtegida - Redirecionando para /login (sem token).');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Se há token, mas o usuário ainda não foi carregado (assíncrono), mostra carregando\n  if (token && (!emailVerificado || !perfilCompleto)) {\n    console.log('RotaProtegida - Carregando informações do usuário...');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando informa\\xE7\\xF5es do usu\\xE1rio...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Se o e-mail não for verificado, redireciona para a página de verificação, a menos que seja a página de perfil completo\n  // ou a própria página de verificação.\n  if (!emailVerificado && location.pathname !== '/verificar-email' && location.pathname !== '/completar-perfil') {\n    console.log('RotaProtegida - Redirecionando para /verificar-email (email não verificado).');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/verificar-email\",\n      replace: true,\n      state: {\n        email: email\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Se o usuário está autenticado mas o perfil não está completo, redireciona\n  if (usuario && !((_usuario = usuario) !== null && _usuario !== void 0 && _usuario.perfil_completo) && location.pathname !== '/completar-perfil') {\n    console.log('RotaProtegida - Redirecionando para /completar-perfil (perfil não completo).');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/completar-perfil\",\n      replace: true,\n      state: {\n        from: location,\n        idUsuario: usuario.id,\n        tipoUsuario: usuario.tipoUsuario,\n        email: email\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Se 'papeisPermitidos' for fornecido, verifica se o tipo de usuário está na lista\n  if (papeisPermitidos && !papeisPermitidos.map(p => p.toLowerCase()).includes((_usuario2 = usuario) === null || _usuario2 === void 0 ? void 0 : (_usuario2$tipoUsuario = _usuario2.tipoUsuario) === null || _usuario2$tipoUsuario === void 0 ? void 0 : _usuario2$tipoUsuario.toLowerCase())) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/nao-autorizado\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Se tudo estiver ok, renderiza o conteúdo filho\n  return children;\n};\n_s(RotaProtegida, \"5zLjEx3dQxlzaCUe3uZR8vzd+/c=\", false, function () {\n  return [useLocation];\n});\n_c = RotaProtegida;\nexport default RotaProtegida;\nvar _c;\n$RefreshReg$(_c, \"RotaProtegida\");","map":{"version":3,"names":["React","useContext","Navigate","useLocation","AuthContext","jsxDEV","_jsxDEV","RotaProtegida","children","papeisPermitidos","_s","_usuario","_usuario2","_usuario2$tipoUsuario","token","perfilCompleto","emailVerificado","email","location","console","log","pathname","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","state","usuario","perfil_completo","from","idUsuario","id","tipoUsuario","map","p","toLowerCase","includes","_c","$RefreshReg$"],"sources":["C:/Users/cydyq/Documents/Python/TesteCacaPreco/cacapreco_ai/busca-app/frontend/src/components/RotaProtegida.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\n\nconst RotaProtegida = ({ children, papeisPermitidos }) => {\n    const { token, perfilCompleto, emailVerificado, email } = useContext(AuthContext);\n    const location = useLocation();\n\n    console.log('RotaProtegida - Email Verificado (do contexto):', emailVerificado, 'Tipo:', typeof emailVerificado);\n    console.log('RotaProtegida - Perfil Completo (do contexto):', perfilCompleto, 'Tipo:', typeof perfilCompleto);\n    console.log('RotaProtegida - Current Path:', location.pathname);\n\n    // Se não há token, redireciona para o login\n    if (!token) {\n        console.log('RotaProtegida - Redirecionando para /login (sem token).');\n        return <Navigate to=\"/login\" replace />;\n    }\n\n    // Se há token, mas o usuário ainda não foi carregado (assíncrono), mostra carregando\n    if (token && (!emailVerificado || !perfilCompleto)) {\n        console.log('RotaProtegida - Carregando informações do usuário...');\n        return <div>Carregando informações do usuário...</div>;\n    }\n\n    // Se o e-mail não for verificado, redireciona para a página de verificação, a menos que seja a página de perfil completo\n    // ou a própria página de verificação.\n    if (!emailVerificado && location.pathname !== '/verificar-email' && location.pathname !== '/completar-perfil') {\n        console.log('RotaProtegida - Redirecionando para /verificar-email (email não verificado).');\n        return <Navigate to=\"/verificar-email\" replace state={{ email: email }} />;\n    }\n\n    // Se o usuário está autenticado mas o perfil não está completo, redireciona\n    if (usuario && !usuario?.perfil_completo && location.pathname !== '/completar-perfil') {\n        console.log('RotaProtegida - Redirecionando para /completar-perfil (perfil não completo).');\n        return <Navigate to=\"/completar-perfil\" replace state={{ from: location, idUsuario: usuario.id, tipoUsuario: usuario.tipoUsuario, email: email }} />;\n    }\n\n    // Se 'papeisPermitidos' for fornecido, verifica se o tipo de usuário está na lista\n    if (papeisPermitidos && !papeisPermitidos.map(p => p.toLowerCase()).includes(usuario?.tipoUsuario?.toLowerCase())) {\n        return <Navigate to=\"/nao-autorizado\" replace />;\n    }\n\n    // Se tudo estiver ok, renderiza o conteúdo filho\n    return children;\n};\n\nexport default RotaProtegida;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}