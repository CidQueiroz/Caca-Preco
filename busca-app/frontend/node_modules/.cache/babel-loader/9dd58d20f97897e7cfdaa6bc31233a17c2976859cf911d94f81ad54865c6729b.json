{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cydyq\\\\Documents\\\\Python\\\\TesteCacaPreco\\\\cacapreco_ai\\\\busca-app\\\\frontend\\\\src\\\\components\\\\RotaProtegida.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RotaProtegida = ({\n  papeisPermitidos\n}) => {\n  _s();\n  const {\n    usuario,\n    token\n  } = useContext(AuthContext);\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Se 'papeisPermitidos' for fornecido, verifica se o tipo de usuário está na lista\n  if (papeisPermitidos && !papeisPermitidos.includes(usuario === null || usuario === void 0 ? void 0 : usuario.tipoUsuario)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/nao-autorizado\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Se a rota não tem 'papeisPermitidos' ou se o usuário tem o papel correto, renderiza o conteúdo\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n};\n_s(RotaProtegida, \"DgZwcDg1g8kyvGbtliDWBnVN8uA=\");\n_c = RotaProtegida;\nexport default RotaProtegida;\nvar _c;\n$RefreshReg$(_c, \"RotaProtegida\");","map":{"version":3,"names":["React","useContext","Navigate","Outlet","AuthContext","jsxDEV","_jsxDEV","RotaProtegida","papeisPermitidos","_s","usuario","token","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","includes","tipoUsuario","_c","$RefreshReg$"],"sources":["C:/Users/cydyq/Documents/Python/TesteCacaPreco/cacapreco_ai/busca-app/frontend/src/components/RotaProtegida.jsx"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst RotaProtegida = ({ papeisPermitidos }) => {\r\n    const { usuario, token } = useContext(AuthContext);\r\n\r\n    if (!token) {\r\n        return <Navigate to=\"/login\" replace />;\r\n    }\r\n\r\n    // Se 'papeisPermitidos' for fornecido, verifica se o tipo de usuário está na lista\r\n    if (papeisPermitidos && !papeisPermitidos.includes(usuario?.tipoUsuario)) {\r\n        return <Navigate to=\"/nao-autorizado\" replace />;\r\n    }\r\n\r\n    // Se a rota não tem 'papeisPermitidos' ou se o usuário tem o papel correto, renderiza o conteúdo\r\n    return <Outlet />;\r\n};\r\n\r\nexport default RotaProtegida;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGV,UAAU,CAACG,WAAW,CAAC;EAElD,IAAI,CAACO,KAAK,EAAE;IACR,oBAAOL,OAAA,CAACJ,QAAQ;MAACU,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3C;;EAEA;EACA,IAAIT,gBAAgB,IAAI,CAACA,gBAAgB,CAACU,QAAQ,CAACR,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAES,WAAW,CAAC,EAAE;IACtE,oBAAOb,OAAA,CAACJ,QAAQ;MAACU,EAAE,EAAC,iBAAiB;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpD;;EAEA;EACA,oBAAOX,OAAA,CAACH,MAAM;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB,CAAC;AAACR,EAAA,CAdIF,aAAa;AAAAa,EAAA,GAAbb,aAAa;AAgBnB,eAAeA,aAAa;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}