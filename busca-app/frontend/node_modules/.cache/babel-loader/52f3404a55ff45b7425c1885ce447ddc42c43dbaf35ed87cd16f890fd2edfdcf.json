{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cydyq\\\\Documents\\\\Python\\\\TesteCacaPreco\\\\cacapreco_ai\\\\busca-app\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  allowedRoles\n}) => {\n  _s();\n  const {\n    user,\n    token\n  } = useContext(AuthContext);\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Se 'allowedRoles' for fornecido, verifica se o tipo de usuário está na lista\n  return allowedRoles && !allowedRoles.includes(user === null || user === void 0 ? void 0 : user.userType) ? /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/nao-autorizado\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 11\n  }, this) // Redireciona para a página de \"não autorizado\"\n  : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 11\n  }, this); // Renderiza o componente filho (a página protegida)\n};\n_s(ProtectedRoute, \"1jJScfaxWHTRHouDpXq1JmRURRc=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useContext","Navigate","Outlet","AuthContext","jsxDEV","_jsxDEV","ProtectedRoute","allowedRoles","_s","user","token","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","includes","userType","_c","$RefreshReg$"],"sources":["C:/Users/cydyq/Documents/Python/TesteCacaPreco/cacapreco_ai/busca-app/frontend/src/components/ProtectedRoute.jsx"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst ProtectedRoute = ({ allowedRoles }) => {\r\n    const { user, token } = useContext(AuthContext);\r\n\r\n    if (!token) {\r\n        return <Navigate to=\"/login\" replace />;\r\n    }\r\n\r\n    // Se 'allowedRoles' for fornecido, verifica se o tipo de usuário está na lista\r\n    return allowedRoles && !allowedRoles.includes(user?.userType)\r\n        ? <Navigate to=\"/nao-autorizado\" replace /> // Redireciona para a página de \"não autorizado\"\r\n        : <Outlet />; // Renderiza o componente filho (a página protegida)\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGV,UAAU,CAACG,WAAW,CAAC;EAE/C,IAAI,CAACO,KAAK,EAAE;IACR,oBAAOL,OAAA,CAACJ,QAAQ;MAACU,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3C;;EAEA;EACA,OAAOT,YAAY,IAAI,CAACA,YAAY,CAACU,QAAQ,CAACR,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAES,QAAQ,CAAC,gBACvDb,OAAA,CAACJ,QAAQ;IAACU,EAAE,EAAC,iBAAiB;IAACC,OAAO;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC;EAAA,eAC1CX,OAAA,CAACH,MAAM;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC,CAAC;AACtB,CAAC;AAACR,EAAA,CAXIF,cAAc;AAAAa,EAAA,GAAdb,cAAc;AAapB,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}