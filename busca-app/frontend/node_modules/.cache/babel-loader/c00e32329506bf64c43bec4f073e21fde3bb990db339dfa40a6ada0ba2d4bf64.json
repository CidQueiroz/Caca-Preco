{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cydyq\\\\Documents\\\\Python\\\\TesteCacaPreco\\\\cacapreco_ai\\\\busca-app\\\\frontend\\\\src\\\\components\\\\RotaProtegida.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RotaProtegida = ({\n  children,\n  papeisPermitidos\n}) => {\n  _s();\n  var _usuario$tipoUsuario;\n  const {\n    usuario,\n    token,\n    perfilCompleto\n  } = useContext(AuthContext);\n  const location = useLocation();\n\n  // Se não há token, redireciona para o login\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Se há token, mas o usuário ainda não foi carregado (assíncrono), mostra carregando\n  if (token && !usuario) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando informa\\xE7\\xF5es do usu\\xE1rio...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Se o usuário está autenticado mas o perfil não está completo, redireciona\n  if (usuario && !perfilCompleto && location.pathname !== '/completar-perfil') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/completar-perfil\",\n      replace: true,\n      state: {\n        from: location\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Se 'papeisPermitidos' for fornecido, verifica se o tipo de usuário está na lista\n  if (papeisPermitidos && !papeisPermitidos.map(p => p.toLowerCase()).includes(usuario === null || usuario === void 0 ? void 0 : (_usuario$tipoUsuario = usuario.tipoUsuario) === null || _usuario$tipoUsuario === void 0 ? void 0 : _usuario$tipoUsuario.toLowerCase())) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/nao-autorizado\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Se tudo estiver ok, renderiza o conteúdo filho\n  return children;\n};\n_s(RotaProtegida, \"dVzC9wyeVw+lldbRStryb7OUO1w=\", false, function () {\n  return [useLocation];\n});\n_c = RotaProtegida;\nexport default RotaProtegida;\nvar _c;\n$RefreshReg$(_c, \"RotaProtegida\");","map":{"version":3,"names":["React","useContext","Navigate","useLocation","AuthContext","jsxDEV","_jsxDEV","RotaProtegida","children","papeisPermitidos","_s","_usuario$tipoUsuario","usuario","token","perfilCompleto","location","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","pathname","state","from","map","p","toLowerCase","includes","tipoUsuario","_c","$RefreshReg$"],"sources":["C:/Users/cydyq/Documents/Python/TesteCacaPreco/cacapreco_ai/busca-app/frontend/src/components/RotaProtegida.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\n\nconst RotaProtegida = ({ children, papeisPermitidos }) => {\n    const { usuario, token, perfilCompleto } = useContext(AuthContext);\n    const location = useLocation();\n\n    // Se não há token, redireciona para o login\n    if (!token) {\n        return <Navigate to=\"/login\" replace />;\n    }\n\n    // Se há token, mas o usuário ainda não foi carregado (assíncrono), mostra carregando\n    if (token && !usuario) {\n        return <div>Carregando informações do usuário...</div>;\n    }\n\n    // Se o usuário está autenticado mas o perfil não está completo, redireciona\n    if (usuario && !perfilCompleto && location.pathname !== '/completar-perfil') {\n        return <Navigate to=\"/completar-perfil\" replace state={{ from: location }} />;\n    }\n\n    // Se 'papeisPermitidos' for fornecido, verifica se o tipo de usuário está na lista\n    if (papeisPermitidos && !papeisPermitidos.map(p => p.toLowerCase()).includes(usuario?.tipoUsuario?.toLowerCase())) {\n        return <Navigate to=\"/nao-autorizado\" replace />;\n    }\n\n    // Se tudo estiver ok, renderiza o conteúdo filho\n    return children;\n};\n\nexport default RotaProtegida;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,oBAAA;EACtD,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAe,CAAC,GAAGb,UAAU,CAACG,WAAW,CAAC;EAClE,MAAMW,QAAQ,GAAGZ,WAAW,CAAC,CAAC;;EAE9B;EACA,IAAI,CAACU,KAAK,EAAE;IACR,oBAAOP,OAAA,CAACJ,QAAQ;MAACc,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3C;;EAEA;EACA,IAAIR,KAAK,IAAI,CAACD,OAAO,EAAE;IACnB,oBAAON,OAAA;MAAAE,QAAA,EAAK;IAAoC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC1D;;EAEA;EACA,IAAIT,OAAO,IAAI,CAACE,cAAc,IAAIC,QAAQ,CAACO,QAAQ,KAAK,mBAAmB,EAAE;IACzE,oBAAOhB,OAAA,CAACJ,QAAQ;MAACc,EAAE,EAAC,mBAAmB;MAACC,OAAO;MAACM,KAAK,EAAE;QAAEC,IAAI,EAAET;MAAS;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjF;;EAEA;EACA,IAAIZ,gBAAgB,IAAI,CAACA,gBAAgB,CAACgB,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAChB,OAAO,aAAPA,OAAO,wBAAAD,oBAAA,GAAPC,OAAO,CAAEiB,WAAW,cAAAlB,oBAAA,uBAApBA,oBAAA,CAAsBgB,WAAW,CAAC,CAAC,CAAC,EAAE;IAC/G,oBAAOrB,OAAA,CAACJ,QAAQ;MAACc,EAAE,EAAC,iBAAiB;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpD;;EAEA;EACA,OAAOb,QAAQ;AACnB,CAAC;AAACE,EAAA,CA1BIH,aAAa;EAAA,QAEEJ,WAAW;AAAA;AAAA2B,EAAA,GAF1BvB,aAAa;AA4BnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}